

module AbsLI where

-- Haskell module generated by the BNF converter




newtype Ident = Ident String deriving (Eq, Ord, Show, Read)
data Program = Prog Stm
  deriving (Eq, Ord, Show, Read)

data Stm = SAss Ident Exp | SBlock [Stm] | SWhile Exp Stm
  deriving (Eq, Ord, Show, Read)

data Exp
    = EAdd Exp Exp
    | ESub Exp Exp
    | EMul Exp Exp
    | EDiv Exp Exp
    | EInt Integer
    | EVar Ident
  deriving (Eq, Ord, Show, Read)

